name: endtest
on:
  deployment_status:

jobs:
  test:
    if: >
      github.event_name == 'deployment_status' &&
      github.event.deployment_status.state == 'success' &&
      ! startsWith(github.event.deployment_status.target_url, 'https://gp-styleguide')
    name: Endtest Functional Test
    runs-on: ubuntu-latest
    steps:
      - name: Set env BRANCH
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

      - name: Print GITHUB_BRANCH
        run: echo "GITHUB_REF is $GITHUB_REF"

      - name: Print BRANCH
        run: echo "Current branch is $BRANCH"

      - name: Set env NEED
        run: |
          if [[ $BRANCH == 'master' ]]; then
              echo "BASE_URL=https://goodparty.org" >> "$GITHUB_ENV"
          elif [[ $BRANCH == 'qa' ]]; then
              echo "BASE_URL=https://qa.goodparty.org" >> "$GITHUB_ENV"
          else
              echo "BASE_URL=https://dev.goodparty.org" >> "$GITHUB_ENV"
          fi

      - name: Print BASE_URL
        run: echo "Current BASE_URL is $BASE_URL"

      - name: Functional test deployment
        id: endtest_functional_tests
        uses: endtest-technologies/github-run-tests-action@v1.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          app_id: ${{ secrets.ENDTEST_APP_ID }}
          app_code: ${{ secrets.ENDTEST_APP_CODE }}
          api_request: ${{ format('{0}&base_url={1}', secrets.ENDTEST_API_REQUEST, env.BASE_URL) }}
          number_of_loops: "1"

      - name: Use the outputs from test execution in a different step
        run: |
          echo ${{ steps.endtest_functional_tests.outputs.test_suite_name }}
          echo ${{ steps.endtest_functional_tests.outputs.configuration }}
          echo ${{ steps.endtest_functional_tests.outputs.test_cases }}
          echo ${{ steps.endtest_functional_tests.outputs.passed }}
          echo ${{ steps.endtest_functional_tests.outputs.failed }}
          echo ${{ steps.endtest_functional_tests.outputs.errors }}
          echo ${{ steps.endtest_functional_tests.outputs.start_time }}
          echo ${{ steps.endtest_functional_tests.outputs.end_time }}
          echo ${{ steps.endtest_functional_tests.outputs.detailed_logs }}
          echo ${{ steps.endtest_functional_tests.outputs.screenshots_and_video }}
          echo ${{ steps.endtest_functional_tests.outputs.hash }}
          echo ${{ steps.endtest_functional_tests.outputs.results }}
