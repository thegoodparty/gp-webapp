name: Deployment and Playwright Tests

on:
  pull_request:
    branches:
      - develop
      - qa

  push:
    branches:
      - qa

jobs:
  test:
    if: >
      (github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success') ||
      (github.event_name == 'pull_request' || github.event_name == 'push')
    name: Playwright Functional Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository to the runner
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.x'

      - name: Install Dependencies for gp-webapp
        run: npm install

      - name: Deploy to Vercel
        id: deploy
        if: ${{ github.ref_name != 'qa' }}
        run: |
          vercel --token ${{ secrets.VERCEL_TOKEN }} --yes

      - name: Capture Deployment URL
        run: |
          if [ "${{ github.ref_name }}" = "qa" ]; then
            echo "BASE_URL=https://qa.goodparty.org" >> $GITHUB_ENV
          else
            DEPLOYMENT_URL=$(vercel --token ${{ secrets.VERCEL_TOKEN }} --yes)
            echo "BASE_URL=$DEPLOYMENT_URL" >> $GITHUB_ENV
          fi

      - name: Checkout test-automation Repository
        uses: actions/checkout@v4
        with:
          repository: thegoodparty/test-automation
          token: ${{ secrets.GH_PAT_TEST }}
          path: test-automation

      - name: Install Playwright Dependencies in test-automation Repo
        run: |
          cd test-automation
          npm install
          npx playwright install --with-deps

      - name: Run Playwright Tests
        run: |
          cd test-automation
          npx playwright test
        env:
          BASE_URL: ${{ env.BASE_URL }}
          TEST_RUN_NAME: "Playwright Test Run - Branch: ${{ github.ref_name }} - Commit: ${{ github.sha }}"
          NODE_PATH: ${{ secrets.NODE_PATH }}
          TESTRAIL_API_KEY: ${{ secrets.TESTRAIL_API_KEY }}
          TESTRAIL_API_URL: ${{ secrets.TESTRAIL_API_URL }}
          TESTRAIL_PROJECT_ID: ${{ secrets.TESTRAIL_PROJECT_ID }}
          TESTRAIL_URL: ${{ secrets.TESTRAIL_URL }}
          TESTRAIL_USERNAME: ${{ secrets.TESTRAIL_USERNAME }}
          TEST_USER_ONBOARDING: ${{ secrets.TEST_USER_ONBOARDING}}
          TEST_USER_LOCAL: ${{ secrets.TEST_USER_LOCAL }}
          TEST_USER_STATE: ${{ secrets.TEST_USER_STATE }}
          TEST_USER_ONBOARDING_PASSWORD: ${{ secrets.TEST_USER_ONBOARDING_PASSWORD }}
          TEST_USER_LOCAL_PASSWORD: ${{ secrets.TEST_USER_LOCAL_PASSWORD }}
          TEST_USER_STATE_PASSWORD: ${{ secrets.TEST_USER_STATE_PASSWORD}}

      - name: Report Test Results
        if: failure()
        run: |
          echo "Playwright tests failed. Review the test results."
          
      - name: Notify Slack Workflow
        env:
          SLACK_WORKFLOW_WEBHOOK: ${{ secrets.SLACK_WORKFLOW_WEBHOOK }}
        run: |
          # Set STATUS and COLOR based on job status
          STATUS=$(if [[ "${{ job.status }}" == "success" ]]; then echo "Pass"; else echo "Fail"; fi)
          COLOR=$(if [[ "${{ job.status }}" == "success" ]]; then echo "good"; else echo "danger"; fi)
          
          # Send the Slack notification
          curl -X POST -H "Content-type: application/json" \
          --data '{
            "text": "Playwright Test Results ('"${STATUS}"')",
            "attachments": [
              {
                "color": "'"${COLOR}"'",
                "fields": [
                  { "title": "Branch", "value": "'"${{ github.ref_name }}"'", "short": true },
                  { "title": "Commit", "value": "'"${{ github.sha }}"'", "short": true },
                  { "title": "Vercel URL", "value": "'"${{ env.BASE_URL }}"'", "short": true }
                ],
                "actions": [
                  {
                    "type": "button",
                    "text": "View Test Runs",
                    "url": "https://goodparty.testrail.io/index.php?/runs/overview/1",
                    "style": "primary"
                  }
                ]
              }
            ]
          }' $SLACK_WORKFLOW_WEBHOOK
      