name: Deployment and Playwright Tests

on:
  pull_request:
    branches:
      - develop
      - qa
      - master
  push:
    branches:
      - develop
      - qa
      - master

jobs:
  test:
    if: >
      (github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success') ||
      (github.event_name == 'pull_request' || github.event_name == 'push')
    name: Playwright Functional Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository to the runner
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.x'

      - name: Install Dependencies for gp-webapp
        run: npm install

      - name: Deploy to Vercel
        id: deploy
        run: |
          vercel --token ${{ secrets.VERCEL_TOKEN }}

      - name: Capture Vercel Deployment URL
        run: |
          DEPLOYMENT_URL=$(vercel --token ${{ secrets.VERCEL_TOKEN }} --yes)
          echo "BASE_URL=$DEPLOYMENT_URL" >> $GITHUB_ENV

      - name: Checkout test-automation Repository
        uses: actions/checkout@v4
        with:
          repository: thegoodparty/test-automation
          token: ${{ secrets.GH_PAT_TEST }}
          path: test-automation

      - name: Install Playwright Dependencies in test-automation Repo
        run: |
          cd test-automation
          npm install
          npx playwright install --with-deps

      - name: Run Playwright Tests
        run: |
          cd test-automation
          npx playwright test
        env:
          BASE_URL: ${{ env.BASE_URL }}
          TEST_RUN_NAME: "Playwright Test Run - Branch: ${{ github.ref_name }} - Commit: ${{ github.sha }}"

      - name: Extract TestRun ID from Playwright results
        id: extract_testrun_id
        run: |
          # Extract the TestRail TestRun ID from Playwright test run result file
          TEST_RUN_ID=$(cat test-automation/test-results/playwright-results.json | jq -r '.testRunId')
          echo "TEST_RUN_ID=$TEST_RUN_ID" >> $GITHUB_ENV
          
      - name: Report Test Results
        if: failure()
        run: |
          echo "Playwright tests failed. Review the test results."

          - name: Notify Slack Workflow with Test Results
          if: always()
          env:
            SLACK_WORKFLOW_WEBHOOK: ${{ secrets.SLACK_WORKFLOW_WEBHOOK }}
            TESTRAIL_API_URL: ${{ secrets.TESTRAIL_API_URL }}
            TESTRAIL_API_KEY: ${{ secrets.TESTRAIL_API_KEY }}
            TEST_RUN_ID: ${{ env.TEST_RUN_ID }}
            TEST_RUN_NAME: ${{ env.TEST_RUN_NAME }}
          run: |
            # Retrieve tests in the run and filter out failed tests
            TESTRAIL_RESPONSE=$(curl -s -u "your_username:${{ secrets.TESTRAIL_API_KEY }}" "${{ secrets.TESTRAIL_API_URL }}/get_tests/${{ env.TEST_RUN_ID }}")
            FAILED_TESTS=$(echo "$TESTRAIL_RESPONSE" | jq '[.[] | select(.status_id == 5)]')
            FAILED_COUNT=$(echo "$FAILED_TESTS" | jq 'length')
            
            # Create a list of failed tests, with each test on a separate line
            FAILED_SUMMARY=$(echo "$FAILED_TESTS" | jq -r '.[] | "- \(.title)\n"' | tr -d '\n' | sed 's/\n/,/g')
  
            # Set overall status based on failed tests
            if [ "$FAILED_COUNT" -gt 0 ]; then
              RUN_STATUS="failed"
            else
              RUN_STATUS="passed"
            fi
  
            # Generate the TestRail URL for the test run
            TESTRAIL_URL="${{ secrets.TESTRAIL_API_URL }}/test-runs/${{ env.TEST_RUN_ID }}"
  
            # Send data to Slack Workflow Webhook with placeholders, including the commit SHA
            curl -X POST -H "Content-type: application/json" \
              --data '{
                "branch": "'"${{ github.ref_name }}"'",
                "commit_sha": "'"${{ github.sha }}"'",
                "failed_count": "'"$FAILED_COUNT"'",
                "failed_summary": "'"$FAILED_SUMMARY"'",
                "run_status": "'"$RUN_STATUS"'",
                "attachments": [
                  {
                    "text": "Click below to view the full TestRun details.",
                    "fallback": "View TestRun Details",
                    "actions": [
                      {
                        "type": "button",
                        "text": "View TestRun",
                        "url": "'"$TESTRAIL_URL"'"
                      }
                    ]
                  }
                ]
              }' \
              $SLACK_WORKFLOW_WEBHOOK